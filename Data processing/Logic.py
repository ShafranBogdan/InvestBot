import asyncio
import datetime
import pandas as pd
from typing import List
from User import *
from Controller import *
from dcs import UpdateObj
import GDrive


class Logic:
    def __init__(self, UI_queue: asyncio.Queue, queue: asyncio.Queue, concurrent_workers: int, GD: GDrive):
        self.queue = queue
        self.__UI_queue = UI_queue
        self.__users = pd.read_csv('Users.csv', usecols=['user_id', 'token'])
        self.concurrent_workers = concurrent_workers
        self._tasks: List[asyncio.Task] = []
        self.__GD = GD

    def print_ui(self, chat_id: int, mes: str, mes_id: int = 0):  # mes_id: 0 - text, 1 - photo
        self.__UI_queue.put_nowait([chat_id, mes, mes_id])

    async def registration(self, chat_id: int):
        """
        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–µ. –ü—Ä–æ—Å–∏–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ —Ç–æ–∫–µ–Ω
        –≤ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ pandas data frame Users.csv.
        –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º chat_id –∏ —Ç–æ–∫–µ–Ω –≤ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö.
        """
        if await self.find_id(chat_id):
            self.print_ui(chat_id,
                          "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")
            return
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ —Å–≤–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
        upd = await self.queue.get()
        # while True:
        token = upd.message.text
        await self.add_token(chat_id, token)
        self.print_ui(chat_id, "–ó–∞–ø–∏—Å–∞–ªüòâ")
        # return

    async def get_portfolio(self, chat_id: int):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø–æ —Ç–æ–∫–µ–Ω—É,
        –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –≤ Users.csv –ø–æ chat_id
        """
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            print(token)
            with Client(token) as client:
                us = User(token, client, self.__GD)
                portfolio = us.df_to_url(us.get_portfolio(account_id=us.get_account_id()))
                self.print_ui(chat_id, portfolio)
                self.print_ui(chat_id, portfolio, mes_id=1)  # mes_id: 0 - text, 1 - photo
        except FigiError:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")

    async def buy_paper(self, chat_id: int):
        """
        –ü–æ–∫—É–ø–∞–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –±—É–º–∞–≥—É –ø–æ figi –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ç–æ–∫–µ–Ω–æ–º,
        –Ω–∞–π–¥–µ–Ω–Ω–æ–º –≤ Users.csv –ø–æ chat_id
        """
        self.print_ui(chat_id, "–£–∫–∞–∂–∏ figi –±—É–º–∞–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å\n"
                               "Figi - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞–∂–¥–æ–π –±—É–º–∞–≥–∏, –µ–≥–æ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ")
        upd = await self.queue.get()
        figi = upd.message.text
        self.print_ui(chat_id, f"–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–º–∞–≥ —Å figi: {figi}, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å")
        upd = await self.queue.get()
        amount = upd.message.text
        users_to_loc = self.__users.set_index(['user_id'])
        token = users_to_loc.loc[chat_id].token
        try:
            with Client(token) as client:
                us = User(token, client, self.__GD)
                us.buy(account_id=us.get_account_id(), figi=figi, amount=int(amount))
                self.print_ui(chat_id, "–ë—É–º–∞–≥–∞ —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–∞, –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ—Ä—Ñ—Ç–æ–ª–∏–æ")
        except FigiError:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except AmountError:
            self.print_ui(chat_id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")

    async def plot(self, chat_id: int):
        """
        –í—ã–≤–æ–¥–∏–º –≥—Ä–∞—Ñ–∏–∫ –±—É–º–∞–≥–∏ –ø–æ figi –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ç–æ–∫–µ–Ω–æ–º,
        –Ω–∞–π–¥–µ–Ω–Ω–æ–º –≤ Users.csv –ø–æ chat_id
        """
        self.print_ui(chat_id, "–£–∫–∞–∂–∏ figi –±—É–º–∞–≥–∏, –≥—Ä–∞—Ñ–∏–∫ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å")
        upd = await self.queue.get()
        figi = upd.message.text
        users_to_loc = self.__users.set_index(['user_id'])
        token = users_to_loc.loc[chat_id].token
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            print(token)
            with Client(token) as client:
                us = User(token, client, self.__GD)
                url = us.get_candles(figi=figi, day_int=150)
                self.print_ui(chat_id, url)
                self.print_ui(chat_id, url, mes_id=1)  # mes_id: 0 - text, 1 - photo
        except:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")

    async def get_limits(self, chat_id: int):
        """
        –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–Ω—ã—Ö –∑–∞—è–≤–æ–∫
        """
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            with Client(token) as client:
                us = User(token, client, self.__GD)
                df = us.get_orders(us.get_account_id())
                url = us.df_to_url(df)
                self.print_ui(chat_id, url)
                self.print_ui(chat_id, url, mes_id=1)  # mes_id: 0 - text, 1 - photo
        except EmptyData:
            self.print_ui(chat_id, "–°–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∑–∞—è–≤–æ–∫ –ø—É—Å—Ç")
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")

    async def buy_limit(self, chat_id: int):
        """
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è figi, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–º–∞–≥,
        –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É. –ó–∞—Ç–µ–º –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É
        """
        self.print_ui(chat_id,
                      "–†–µ–∂–∏–º –ø–æ–∫—É–ø–∫–∏ –ª–∏–º–∏—Ç–Ω–æ–π –∑—è–≤–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–æ—Ç–µ –ª—É—á—à–µ, —á–µ–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö. –ó–¥–µ—Å—å –Ω–µ—Ç —Å—Ä–æ–∫–∞ –Ω–∞ –ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞—è–≤–∫–∏"
                      " - –æ–Ω–∞ –Ω–µ —É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ —Å—É—Ç–∫–∏, –Ω–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –µ–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /cancel_limits")
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ figi –±—É–º–∞–≥–∏, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –≤—ã—Å—Ç–∞–≤–∏—Ç—å –ª–∏–º–∏—Ç–Ω—É—é –∑–∞—è–≤–∫—É")
        upd = await self.queue.get()
        figi = upd.message.text
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ –∂–µ–ª–∞–µ–º–æ–µ –∫ –ø–æ–∫—É–ø–∫–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–º–∞–≥")
        upd = await self.queue.get()
        cnt = upd.message.text
        try:
            amount = int(cnt)
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ. –î–ª—è –µ—â–µ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–æ–≤–∏ /buy_limits –ø–æ–≤—Ç–æ—Ä–Ω–æ")
            return
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ —Ü–µ–Ω—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∂–µ–ª–∞–µ—à—å –∫—É–ø–∏—Ç—å –±—É–º–∞–≥—É")
        upd = await self.queue.get()
        price = upd.message.text
        try:
            price = int(price)
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ. –î–ª—è –µ—â–µ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–æ–≤–∏ /buy_limits –ø–æ–≤—Ç–æ—Ä–Ω–æ")
            return
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            with Client(token) as client:
                us = User(token, client, self.__GD)
                us.buy_limit(account_id=us.get_account_id(), figi=figi, amount=int(amount), price=price)
                self.print_ui(chat_id, "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
        except:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")

    async def sell_paper(self, chat_id: int):
        """
        –ü—Ä–æ–¥–∞–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –±—É–º–∞–≥—É –ø–æ figi –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ç–æ–∫–µ–Ω–æ–º,
        –Ω–∞–π–¥–µ–Ω–Ω–æ–º –≤ Users.csv –ø–æ chat_id
        """
        self.print_ui(chat_id, "–£–∫–∞–∂–∏ figi –±—É–º–∞–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å")
        upd = await self.queue.get()
        figi = upd.message.text
        self.print_ui(chat_id, f"–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–º–∞–≥ —Å figi: {figi}, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å")
        upd = await self.queue.get()
        amount = upd.message.text
        try:
            amount = int(amount)
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ. –î–ª—è –µ—â–µ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–æ–≤–∏ /sell_limits –ø–æ–≤—Ç–æ—Ä–Ω–æ")
            return
        users_to_loc = self.__users.set_index(['user_id'])
        token = users_to_loc.loc[chat_id].token
        try:
            with Client(token) as client:
                us = User(token, client, self.__GD)
                us.sell(account_id=us.get_account_id(), figi=figi, amount=int(amount))
                self.print_ui(chat_id, "–ë—É–º–∞–≥–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–Ω–∞")
        except FigiError:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except AmountError:
            self.print_ui(chat_id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")

    async def last_price(self, chat_id: int):
        """
        –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å –±–∏—Ä–∂–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–µ–Ω—É –±—É–º–∞–≥–∏
        —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º figi –∏ –µ—ë –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        """
        self.print_ui(chat_id, "–£–∫–∞–∂–∏ figi –±—É–º–∞–≥–∏, —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å\n"
                               "–£–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –±—É–º–∞–≥ –∏ –∏—Ö figi –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â–Ω—å—é /get_figi")
        upd = await self.queue.get()
        figi = upd.message.text
        if figi == "/get_figi":
            await self.get_figi(chat_id)
            return
        users_to_loc = self.__users.set_index(['user_id'])
        token = users_to_loc.loc[chat_id].token
        try:
            with Client(token) as client:
                us = User(token, client, self.__GD)
                price = us.get_last_price(figi=figi)
                self.print_ui(chat_id, f"–°—Ç–æ–∏–º–æ—Å—Ç—å –±—É–º–∞–≥–∏: {price}")
        except FigiError:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")

    async def sell_limit(self, chat_id: int):
        """
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è figi, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–º–∞–≥,
        –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–¥–∞–∂—É. –ó–∞—Ç–µ–º –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É
        """
        self.print_ui(chat_id,
                      "–†–µ–∂–∏–º –ø–æ–∫—É–ø–∫–∏ –ª–∏–º–∏—Ç–Ω–æ–π –∑—è–≤–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–æ—Ç–µ –ª—É—á—à–µ, —á–µ–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö. –ó–¥–µ—Å—å –Ω–µ—Ç —Å—Ä–æ–∫–∞ –Ω–∞ –ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞—è–≤–∫–∏"
                      " - –æ–Ω–∞ –Ω–µ —É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ —Å—É—Ç–∫–∏, –Ω–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –µ–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /cancel_limits")
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ figi –±—É–º–∞–≥–∏, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –≤—ã—Å—Ç–∞–≤–∏—Ç—å –ª–∏–º–∏—Ç–Ω—É—é –∑–∞—è–≤–∫—É")
        upd = await self.queue.get()
        figi = upd.message.text
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ –∂–µ–ª–∞–µ–º–æ–µ –∫ –ø—Ä–æ–¥–∞–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–º–∞–≥")
        upd = await self.queue.get()
        cnt = upd.message.text
        try:
            amount = int(cnt)
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ. –î–ª—è –µ—â–µ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–æ–≤–∏ /sell_limits –ø–æ–≤—Ç–æ—Ä–Ω–æ")
            return
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ —Ü–µ–Ω—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∂–µ–ª–∞–µ—à—å –ø—Ä–æ–¥–∞—Ç—å –±—É–º–∞–≥—É")
        upd = await self.queue.get()
        price = upd.message.text
        try:
            price = int(price)
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ. –î–ª—è –µ—â–µ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–æ–≤–∏ /sell_limits –ø–æ–≤—Ç–æ—Ä–Ω–æ")
            return
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            with Client(token) as client:
                us = User(token, client, self.__GD)
                us.sell_limit(account_id=us.get_account_id(), figi=figi, amount=int(amount), price=price)
                self.print_ui(chat_id, "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
        except:
            self.print_ui(chat_id, "Figi –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º")

    async def cancel_limit(self, chat_id: int):
        """
        –û—Ç–º–µ–Ω–∞ –ª–∏–º–∏—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
        """
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ª–∏–º–∏—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å\n"
                               "–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º—Ç–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∑–∞—è–≤–æ–∫ –∫–æ–º–∞–Ω–¥–æ–π /limits")
        upd = await self.queue.get()
        num = upd.message.text
        try:
            num = int(num)
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            with Client(token) as client:
                us = User(token, client, self.__GD)
                us.cancel_order_by_number(us.get_account_id(), num)
                self.print_ui(chat_id, "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        except InputError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏")
        except ValueError:
            self.print_ui(chat_id, "–¢—ã –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ, –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä –ª–∏–º–∏—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏")
        except:
            self.print_ui(chat_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")

    async def get_figi(self, chat_id: int):
        """
        –ü–æ—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–º–∞–≥ –∏ –∏—Ö figi,
        –≤–µ–¥—å –≤ –∏–Ω—Ç–µ—Ä–µ–Ω–µ—Ç–µ –∏—Ö –Ω–∞–π—Ç–∏ –ø–æ—Ä–æ–π —Å–ª–æ–∂–Ω–æ
        """
        try:
            users_to_loc = self.__users.set_index(['user_id'])
            token = users_to_loc.loc[chat_id].token
            with Client(token) as client:
                us = User(token, client, self.__GD)
                url = us.get_all_figies()
                self.print_ui(chat_id, "–°–µ–π—á–∞—Å –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–º–∞–≥ –∏ –∏—Ö figi. "
                                       "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –ø–æ–∏—Å–∫–æ–º –ø–æ —Ñ–∞–π–ª—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –±—É–º–∞–≥—É.")
                self.print_ui(chat_id, url)
        except:
            self.print_ui(chat_id, "–¢–æ–∫–µ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º"
                                   "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é /change_token")




    async def change_token(self, chat_id: int):
        """
        –ò–∑–º–µ–Ω—è–µ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω—ã–π)
        """
        self.print_ui(chat_id, "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
        upd = await self.queue.get()
        token = upd.message.text
        users_to_loc = self.__users.set_index(['user_id'])
        users_to_loc.loc[chat_id].token = token
        self.__users = users_to_loc.reset_index()
        self.print_ui(chat_id, "–ó–∞–ø–∏—Å–∞–ªüòâ")
        self.__users.to_csv('Users.csv')

    async def distribution(self, upd: UpdateObj):
        mes = upd.message.text
        chat_id = upd.message.chat.id
        if mes == '/start':
            await self.registration(chat_id)
        elif mes != "" and not await self.find_id(chat_id):
            self.print_ui(chat_id, "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n"
                                   "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –Ω–∞–ø–∏—à–∏ /start –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è")
        elif mes == "/portfolio":
            await self.get_portfolio(chat_id)
        elif mes == "/buy":
            await self.buy_paper(chat_id)
        elif mes == "/plot":
            await self.plot(chat_id)
        elif mes == "/limits":
            await self.get_limits(chat_id)
        elif mes == "/buy_limits":
            await self.buy_limit(chat_id)
        elif mes == "/sell_limits":
            await self.sell_limit(chat_id)
        elif mes == "/cancel_limits":
            await self.cancel_limit(chat_id)
        elif mes == "/get_figi":
            await self.get_figi(chat_id)
        elif mes == "/change_token":
            await self.change_token(chat_id)
        elif mes == "sell":
            await self.sell_paper(chat_id)
        elif mes == '/last_price':
            await self.last_price(chat_id)
        else:
            self.print_ui(chat_id, "–ü–æ–ø—Ä–æ–±—É–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏–∑ –º–µ–Ω—é")

    async def _worker(self):
        while True:
            upd = await self.queue.get()
            chat_id = upd.message.chat.id
            try:
                await self.distribution(upd)
            finally:
                self.queue.task_done()

    async def start(self):
        self._tasks = [asyncio.create_task(self._worker()) for _ in range(self.concurrent_workers)]

    async def stop(self):
        await self.queue.join()
        for t in self._tasks:
            t.cancel()

    async def add_token(self, user_id: int, token=0):
        self.__users = self.__users.append({'user_id': user_id, 'token': token}, ignore_index=True)
        print(self.__users)
        self.__users.to_csv('Users.csv')

    async def find_id(self, user_id: int):
        return any(self.__users.user_id == user_id)
